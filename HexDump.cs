//C# Code generated by Deepseek R1 as edited MS Copilot
using System;
using System.IO;
using System.Text;
using System.Diagnostics;

class HexDump
{
    static void Main(string[] args)
    {
        string inputFilePath = @"c:\dev\vfp\Clipper_zip_extract\qwe.zip.1"; // Replace with your file path
        string outputFilePath = Path.ChangeExtension(inputFilePath, ".hex");

        Encoding iso = Encoding.GetEncoding(28591); // ISO-8859-1 encoding

        try
        {
            using (FileStream inputStream = File.OpenRead(inputFilePath))
            using (StreamWriter outputWriter = new StreamWriter(outputFilePath, false, iso))
            {
                byte[] buffer = new byte[16];
                int bytesRead;
                long offset = 0;

                while ((bytesRead = inputStream.Read(buffer, 0, 16)) > 0)
                {
                    // Format the offset as an 8-digit hexadecimal number
                    string offsetHex = $"{offset:X8}: ";

                    // Build the hexadecimal part of the line
                    StringBuilder hexPart = new StringBuilder();
                    for (int i = 0; i < bytesRead; i++)
                    {
                        hexPart.AppendFormat("{0:X2}", buffer[i]);
                        if (i == 7)
                            hexPart.Append("|");
                        else
                            hexPart.Append(" ");
                    }

                    // Build the ASCII representation, replacing specific control characters
                    string asciiPart = iso.GetString(buffer, 0, bytesRead)
                        .Replace("\t", ".")
                        .Replace("\n", ".")
                        .Replace("\r", ".");

                    // Combine all parts into the final line and write to the output file
                    string line = $"{offsetHex}{hexPart} | {asciiPart}";
                    outputWriter.WriteLine(line);

                    offset += 16; // Increment offset by 16 for the next line
                }
            }

            // Open the generated hex file with the default text editor
            Process.Start(new ProcessStartInfo(outputFilePath) { UseShellExecute = true });
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }
}
